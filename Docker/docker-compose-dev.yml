version: '3.7'
services:
  ros1_base:
    build: ./ros1_base
    image: ros1_base
    container_name: ros1_base
    networks:
      - rosnet
    tty: true
    command:
      - "/bin/bash" 
      - "-c" 
      - "source /opt/ros/melodic/setup.bash && roscore"

  ros1_ros-sharp:
    depends_on: [ros1_base]
    build: ./ros1_ros-sharp
    image: ros1_ros-sharp
    container_name: ros1_ros-sharp
    networks:
      - rosnet

  ros1_ur:
    depends_on: [ros1_base]
    build: ./ros1_ur
    image: ros1_ur
    container_name: ros1_ur
    networks:
      - rosnet

  ros1_ur_rossharp:
    depends_on: [ros1_ur]
    build: ./ros1_ur_rossharp
    image: ros1_ur_rossharp
    container_name: ros1_ur_rossharp
    networks:
      - rosnet

  ros1_anymal:
    depends_on: [ros1_base]
    build: ./ros1_anymal
    image: ros1_anymal
    container_name: ros1_anymal
    networks:
      - rosnet

  ros1_ar_manager:
    depends_on: [ros1_ur_rossharp]
    build: ./ros1_ar_manager
    image: ros1_ar_manager
    container_name: ros1_ar_manager
    environment:
      - "ROS_MASTER_URI=http://ros1_base:11311" 
    tty: true
    networks:
      - rosnet
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 5000:5000
    restart: always
    command:
      - "/bin/bash" 
      - "-c" 
      - "source /opt/ros/melodic/setup.bash && \
        cd /home/ARbotics/AR_Manager && \
        python3 src/main.py"
        
  swagger_server:
    image: swaggerapi/swagger-ui
    container_name: swagger_server
    ports:
      - "5001:8080"
    volumes:
      - "./swagger_config:/foo"
    environment:
     - SWAGGER_JSON=/foo/AR-Manager_swagger_cfg.json

networks:
  rosnet:
    driver: bridge

volumes:
   MeshVolume: